{"ast":null,"code":"const getsShield = npcClass => {\n  //filters out classes without shield proficiency\n  if (npcClass === \"bard\" || npcClass === \"monk\" || npcClass === \"rogue\" || npcClass === \"sorcerer\" || npcClass === \"warlock\" || npcClass === \"wizard\") {\n    return false;\n  } else {\n    let temp = Math.floor(Math.random() * 2);\n    if (temp === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\nconst armorSmith = type => {\n  console.log(\"armor\");\n  if (type === \"simpleM\") {\n    console.log(\"simpleM got\");\n  } else {\n    console.log(\"simpleR got\");\n  }\n};\nconst weaponSmith = type => {\n  //melee\n  const simpleMelee = [\"club\", \"dagger\", \"greatclub\", \"handaxe\", \"javelin\", \"light hammer\", \"mace\", \"quarterstaff\", \"sickle\", \"spear\"];\n  const martialMelee = [\"battleaxe\", \"flail\", \"glaive\", \"greataxe\", \"greatsword\", \"halberd\", \"lance\", \"longsword\", \"maul\", \"morningstar\", \"pike\", \"rapier\", \"scimitar\", \"shortsword\", \"trident\", \"war pick\", \"warhammer\", \"whip\"];\n  //ranged\n  const simpleRanged = [\"light crossbow\", \"dart\", \"shortbow\", \"sling\"];\n  const martialRanged = [\"blowgun\", \"hand crossbow\", \"heavy crossbow\", \"longbow\", \"net\"];\n  if (type === \"simpleM\") {\n    console.log(\"simpleM got\");\n  } else {\n    console.log(\"simpleR got\");\n  }\n\n  //let randomSimpleMelee = simpleMelee[Math.floor(Math.random() * 11)];\n  //let randomMartialMelee = martialMelee[Math.floor(Math.random() * 19)];\n  //let randomSimpleRanged = simpleRanged[Math.floor(Math.random() * 5)];\n  //let randomMartialRanged = martialRanged[Math.floor(Math.random() * 6)];\n};\n\n//will randomize equipment based off class; preferential logic will usually outfit a character with better equipment\n//if class has multiple proficiencies, eg both simple and martial weapons,\n//a roll for one will be made before the roll for the individual equipment is finished\nconst getEquipment = target => {\n  let temp = [];\n  let rngWep = null;\n  let rngArmor = null;\n  switch (target) {\n    case \"artificer\":\n      rngWep = Math.floor(Math.random() * 11);\n      if (rngWep >= 4) {\n        temp.push(weaponSmith(\"simpleM\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n      rngArmor = Math.floor(Math.random() * 11);\n      if (rngArmor >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    case \"barbarian\":\n      rngWep = Math.floor(Math.random() * 11);\n      if (rngWep > 5) {\n        temp.push(weaponSmith(\"martialM\"));\n      } else if (rngWep <= 5 && rngWep > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n      } else if (rngWep <= 2 && rngWep > 0) {\n        temp.push(weaponSmith(\"martialR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n      rngArmor = Math.floor(Math.random() * 11);\n      if (rngArmor >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    case \"bard\":\n      break;\n    case \"cleric\":\n      break;\n    case \"druid\":\n      break;\n    case \"fighter\":\n      break;\n    case \"monk\":\n      break;\n    case \"paladin\":\n      break;\n    case \"ranger\":\n      break;\n    case \"rogue\":\n      break;\n    case \"sorcerer\":\n      break;\n    case \"warlock\":\n      break;\n    case \"wizard\":\n      break;\n    default:\n      return;\n  }\n  return temp;\n};\nexport { getEquipment, getsShield };","map":{"version":3,"names":["getsShield","npcClass","temp","Math","floor","random","armorSmith","type","console","log","weaponSmith","simpleMelee","martialMelee","simpleRanged","martialRanged","getEquipment","target","rngWep","rngArmor","push"],"sources":["/Users/gabriel/Documents/VSC/Projects/npc-generator/src/components/input-block/equipment-logic.js"],"sourcesContent":["const getsShield = (npcClass) => {\n  //filters out classes without shield proficiency\n  if (\n    npcClass === \"bard\" ||\n    npcClass === \"monk\" ||\n    npcClass === \"rogue\" ||\n    npcClass === \"sorcerer\" ||\n    npcClass === \"warlock\" ||\n    npcClass === \"wizard\"\n  ) {\n    return false;\n  } else {\n    let temp = Math.floor(Math.random() * 2);\n    if (temp === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nconst armorSmith = (type) => {\n  console.log(\"armor\");\n\n  if (type === \"simpleM\") {\n    console.log(\"simpleM got\");\n  } else {\n    console.log(\"simpleR got\");\n  }\n};\n\nconst weaponSmith = (type) => {\n  //melee\n  const simpleMelee = [\n    \"club\",\n    \"dagger\",\n    \"greatclub\",\n    \"handaxe\",\n    \"javelin\",\n    \"light hammer\",\n    \"mace\",\n    \"quarterstaff\",\n    \"sickle\",\n    \"spear\",\n  ];\n  const martialMelee = [\n    \"battleaxe\",\n    \"flail\",\n    \"glaive\",\n    \"greataxe\",\n    \"greatsword\",\n    \"halberd\",\n    \"lance\",\n    \"longsword\",\n    \"maul\",\n    \"morningstar\",\n    \"pike\",\n    \"rapier\",\n    \"scimitar\",\n    \"shortsword\",\n    \"trident\",\n    \"war pick\",\n    \"warhammer\",\n    \"whip\",\n  ];\n  //ranged\n  const simpleRanged = [\"light crossbow\", \"dart\", \"shortbow\", \"sling\"];\n  const martialRanged = [\n    \"blowgun\",\n    \"hand crossbow\",\n    \"heavy crossbow\",\n    \"longbow\",\n    \"net\",\n  ];\n\n  if (type === \"simpleM\") {\n    console.log(\"simpleM got\");\n  } else {\n    console.log(\"simpleR got\");\n  }\n\n  //let randomSimpleMelee = simpleMelee[Math.floor(Math.random() * 11)];\n  //let randomMartialMelee = martialMelee[Math.floor(Math.random() * 19)];\n  //let randomSimpleRanged = simpleRanged[Math.floor(Math.random() * 5)];\n  //let randomMartialRanged = martialRanged[Math.floor(Math.random() * 6)];\n};\n\n//will randomize equipment based off class; preferential logic will usually outfit a character with better equipment\n//if class has multiple proficiencies, eg both simple and martial weapons,\n//a roll for one will be made before the roll for the individual equipment is finished\nconst getEquipment = (target) => {\n  let temp = [];\n  let rngWep = null;\n  let rngArmor = null;\n  switch (target) {\n    case \"artificer\":\n      rngWep = Math.floor(Math.random() * 11);\n      if (rngWep >= 4) {\n        temp.push(weaponSmith(\"simpleM\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n\n      rngArmor = Math.floor(Math.random() * 11);\n      if (rngArmor >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    case \"barbarian\":\n      rngWep = Math.floor(Math.random() * 11);\n      if (rngWep > 5) {\n        temp.push(weaponSmith(\"martialM\"));\n      } else if (rngWep <= 5 && rngWep > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n      } else if (rngWep <= 2 && rngWep > 0) {\n        temp.push(weaponSmith(\"martialR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n\n      rngArmor = Math.floor(Math.random() * 11);\n      if (rngArmor >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    case \"bard\":\n      break;\n    case \"cleric\":\n      break;\n    case \"druid\":\n      break;\n    case \"fighter\":\n      break;\n    case \"monk\":\n      break;\n    case \"paladin\":\n      break;\n    case \"ranger\":\n      break;\n    case \"rogue\":\n      break;\n    case \"sorcerer\":\n      break;\n    case \"warlock\":\n      break;\n    case \"wizard\":\n      break;\n    default:\n      return;\n  }\n\n  return temp;\n};\n\nexport { getEquipment, getsShield };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}