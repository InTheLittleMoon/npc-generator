{"ast":null,"code":"//health logic is small enough just to include here\nconst generateHealth = () => {\n  //bonus to health can vary from 20-30 total\n  let min = Math.ceil(10);\n  console.log(min);\n  let max = Math.floor(20);\n  console.log(max);\n  let bonusToHealth = Math.floor(Math.random() * (max - min) + min);\n  console.log(bonusToHealth);\n};\ngenerateHealth();\n\n//every npc has a chance to roll with higher end equipment\nconst greaterItems = () => {\n  let temp = Math.floor(Math.random() * 101);\n  if (temp === 100) {\n    return \"Dm Choice\";\n  } else if (temp >= 95) {\n    return \"+2 Item\";\n  } else if (temp <= 94 && temp > 79) {\n    return \"+1 Item\";\n  } else {\n    return \"No Magic Items\";\n  }\n};\n\n//every npc has a chance to roll with a potion of varying tiers\nconst getsPotion = () => {\n  let temp = Math.floor(Math.random() * 101);\n  if (temp > 95) {\n    return \"Superior Healing Potion\";\n  } else if (temp <= 95 && temp > 85) {\n    return \"Greater Healing Potion\";\n  } else if (temp <= 85 && temp > 49) {\n    return \"Healing Potion\";\n  } else {\n    return \"No Potion\";\n  }\n};\nconst getsShield = npcClass => {\n  //filters out classes without shield proficiency\n  if (npcClass === \"bard\" || npcClass === \"monk\" || npcClass === \"rogue\" || npcClass === \"sorcerer\" || npcClass === \"warlock\" || npcClass === \"wizard\") {\n    return false;\n  } else {\n    //coin toss for actually having a shield\n    let temp = Math.floor(Math.random() * 2);\n    if (temp === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\n//based off class proficiencies in preferential logics in 'getEquipment' function\nconst armorSmith = type => {\n  //static in game armors\n  const lightArmor = [\"Padded Leather\", \"Leather Armor\", \"Studded Leather\"];\n  const mediumArmor = [\"Hide Armor\", \"Chainshirt\", \"Scale Mail\", \"Breastplate\", \"Half Plate\"];\n  const heavyArmor = [\"Ring Mail\", \"Chain Mail\", \"Splint\", \"Plate\"];\n  if (type === \"light\") {\n    return lightArmor[Math.floor(Math.random() * lightArmor.length)];\n  } else if (type === \"med\") {\n    return mediumArmor[Math.floor(Math.random() * mediumArmor.length)];\n  } else if (type === \"heavy\") {\n    return heavyArmor[Math.floor(Math.random() * heavyArmor.length)];\n  }\n};\n\n//based off class proficiencies in preferential logics in 'getEquipment' function\nconst weaponSmith = type => {\n  //static in game weapons\n  //melee\n  const simpleMelee = [\"Club\", \"Dagger\", \"Greatclub\", \"Handaxe\", \"Javelin\", \"Light Hammer\", \"Mace\", \"Quarterstaff\", \"Sickle\", \"Spear\"];\n  const martialMelee = [\"Battleaxe\", \"Flail\", \"Glaive\", \"Greataxe\", \"Greatsword\", \"Halberd\", \"Lance\", \"Longsword\", \"Maul\", \"Morningstar\", \"Pike\", \"Rapier\", \"Scimitar\", \"Shortsword\", \"Trident\", \"War Pick\", \"Warhammer\", \"Whip\"];\n  //ranged\n  const simpleRanged = [\"Light Crossbow\", \"Dart\", \"Shortbow\", \"Sling\"];\n  const martialRanged = [\"Blowgun\", \"Hand Crossbow\", \"Heavy Crossbow\", \"Longbow\", \"Net\"];\n  if (type === \"simpleR\") {\n    return simpleRanged[Math.floor(Math.random() * simpleRanged.length)];\n  } else if (type === \"simpleM\") {\n    return simpleMelee[Math.floor(Math.random() * simpleMelee.length)];\n  } else if (type === \"martialR\") {\n    return martialRanged[Math.floor(Math.random() * martialRanged.length)];\n  } else if (type === \"martialM\") {\n    return martialMelee[Math.floor(Math.random() * martialMelee.length)];\n  }\n};\n\n//will randomize equipment based off class\n//preferential logic will usually outfit a character with better equipment based on current meta of the game\n\n//if class has multiple proficiencies, eg both simple and martial weapons,\n//a roll for one will be made before the roll for the individual equipment is finished\nconst getEquipment = target => {\n  let temp = [];\n  let weaponRNG = null;\n  let armorRNG = null;\n  let customInv = null;\n  switch (target) {\n    //artificer\n    case \"artificer\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG >= 4) {\n        temp.push(weaponSmith(\"simpleM\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //barbarian\n    case \"barbarian\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 5) {\n        temp.push(weaponSmith(\"martialM\"));\n      } else if (weaponRNG <= 5 && weaponRNG > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n      } else if (weaponRNG <= 2 && weaponRNG > 0) {\n        temp.push(weaponSmith(\"martialR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //bard\n    case \"bard\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 6) {\n        customInv = [\"hand crossbow\", \"longsword\", \"rapier\", \"shortsword\"];\n        temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n      temp.push(armorSmith(\"light\"));\n      break;\n    //cleric\n    case \"cleric\":\n      temp.push(weaponSmith(\"simpleM\"));\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //druid\n    case \"druid\":\n      customInv = [\"Club\", \"Dagger\", \"Dart\", \"Javelin\", \"Mace\", \"Quarterstaff\", \"Scimitar\", \"Sickle\", \"Sling\", \"Spear\"];\n      temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //fighter\n    case \"fighter\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 8) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 8 && weaponRNG > 6) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else if (weaponRNG <= 6 && weaponRNG > 4) {\n        temp.push(weaponSmith(\"martialM\"));\n      } else if (weaponRNG <= 4 && weaponRNG > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG > 7) {\n        temp.push(armorSmith(\"heavy\"));\n      } else if (armorRNG <= 7 && armorRNG > 2) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //monk\n    case \"monk\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 5) {\n        temp.push(\"shortsword\");\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n      temp.push(\"No Armor\");\n      break;\n    //paladin\n    case \"paladin\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 8) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 8 && weaponRNG > 6) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else if (weaponRNG <= 6 && weaponRNG > 4) {\n        temp.push(weaponSmith(\"martialM\"));\n      } else if (weaponRNG <= 4 && weaponRNG > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG > 7) {\n        temp.push(armorSmith(\"heavy\"));\n      } else if (armorRNG <= 7 && armorRNG > 2) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //ranger\n    case \"ranger\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 8) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 8 && weaponRNG > 6) {\n        temp.push(weaponSmith(\"simpleM\"));\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 6 && weaponRNG > 4) {\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 4 && weaponRNG > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //rogue\n    case \"rogue\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 6) {\n        customInv = [\"Hand crossbow\", \"Longsword\", \"Rapier\", \"Shortsword\"];\n        temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n      temp.push(armorSmith(\"light\"));\n      break;\n    //sorcerer\n    case \"sorcerer\":\n      customInv = [\"Dagger\", \"Dart\", \"Sling\", \"Quarterstaff\", \"Light Crossbow\"];\n      temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n      temp.push(\"No Armor\");\n      break;\n    //warlock\n    case \"warlock\":\n      temp.push(weaponSmith(\"simpleM\"));\n      temp.push(armorSmith(\"light\"));\n      break;\n    //wizard\n    case \"wizard\":\n      customInv = [\"Dagger\", \"Dart\", \"Sling\", \"Quarterstaff\", \"Light Crossbow\"];\n      temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n      temp.push(\"No Armor\");\n      break;\n    default:\n      return;\n  }\n  return temp;\n};\nexport { getEquipment, getsShield, getsPotion, greaterItems, generateHealth };","map":{"version":3,"names":["generateHealth","min","Math","ceil","console","log","max","floor","bonusToHealth","random","greaterItems","temp","getsPotion","getsShield","npcClass","armorSmith","type","lightArmor","mediumArmor","heavyArmor","length","weaponSmith","simpleMelee","martialMelee","simpleRanged","martialRanged","getEquipment","target","weaponRNG","armorRNG","customInv","push"],"sources":["/Users/gabriel/Documents/GitHub/npc-generator/src/components/equipment-logic/equipment-logic.js"],"sourcesContent":["//health logic is small enough just to include here\nconst generateHealth = () => {\n  //bonus to health can vary from 20-30 total\n  let min = Math.ceil(10);\n  console.log(min);\n  let max = Math.floor(20);\n  console.log(max);\n  let bonusToHealth = Math.floor(Math.random() * (max - min) + min);\n  console.log(bonusToHealth);\n};\n\ngenerateHealth();\n\n//every npc has a chance to roll with higher end equipment\nconst greaterItems = () => {\n  let temp = Math.floor(Math.random() * 101);\n  if (temp === 100) {\n    return \"Dm Choice\";\n  } else if (temp >= 95) {\n    return \"+2 Item\";\n  } else if (temp <= 94 && temp > 79) {\n    return \"+1 Item\";\n  } else {\n    return \"No Magic Items\";\n  }\n};\n\n//every npc has a chance to roll with a potion of varying tiers\nconst getsPotion = () => {\n  let temp = Math.floor(Math.random() * 101);\n  if (temp > 95) {\n    return \"Superior Healing Potion\";\n  } else if (temp <= 95 && temp > 85) {\n    return \"Greater Healing Potion\";\n  } else if (temp <= 85 && temp > 49) {\n    return \"Healing Potion\";\n  } else {\n    return \"No Potion\";\n  }\n};\n\nconst getsShield = (npcClass) => {\n  //filters out classes without shield proficiency\n  if (\n    npcClass === \"bard\" ||\n    npcClass === \"monk\" ||\n    npcClass === \"rogue\" ||\n    npcClass === \"sorcerer\" ||\n    npcClass === \"warlock\" ||\n    npcClass === \"wizard\"\n  ) {\n    return false;\n  } else {\n    //coin toss for actually having a shield\n    let temp = Math.floor(Math.random() * 2);\n    if (temp === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\n//based off class proficiencies in preferential logics in 'getEquipment' function\nconst armorSmith = (type) => {\n  //static in game armors\n  const lightArmor = [\"Padded Leather\", \"Leather Armor\", \"Studded Leather\"];\n  const mediumArmor = [\n    \"Hide Armor\",\n    \"Chainshirt\",\n    \"Scale Mail\",\n    \"Breastplate\",\n    \"Half Plate\",\n  ];\n  const heavyArmor = [\"Ring Mail\", \"Chain Mail\", \"Splint\", \"Plate\"];\n\n  if (type === \"light\") {\n    return lightArmor[Math.floor(Math.random() * lightArmor.length)];\n  } else if (type === \"med\") {\n    return mediumArmor[Math.floor(Math.random() * mediumArmor.length)];\n  } else if (type === \"heavy\") {\n    return heavyArmor[Math.floor(Math.random() * heavyArmor.length)];\n  }\n};\n\n//based off class proficiencies in preferential logics in 'getEquipment' function\nconst weaponSmith = (type) => {\n  //static in game weapons\n  //melee\n  const simpleMelee = [\n    \"Club\",\n    \"Dagger\",\n    \"Greatclub\",\n    \"Handaxe\",\n    \"Javelin\",\n    \"Light Hammer\",\n    \"Mace\",\n    \"Quarterstaff\",\n    \"Sickle\",\n    \"Spear\",\n  ];\n  const martialMelee = [\n    \"Battleaxe\",\n    \"Flail\",\n    \"Glaive\",\n    \"Greataxe\",\n    \"Greatsword\",\n    \"Halberd\",\n    \"Lance\",\n    \"Longsword\",\n    \"Maul\",\n    \"Morningstar\",\n    \"Pike\",\n    \"Rapier\",\n    \"Scimitar\",\n    \"Shortsword\",\n    \"Trident\",\n    \"War Pick\",\n    \"Warhammer\",\n    \"Whip\",\n  ];\n  //ranged\n  const simpleRanged = [\"Light Crossbow\", \"Dart\", \"Shortbow\", \"Sling\"];\n  const martialRanged = [\n    \"Blowgun\",\n    \"Hand Crossbow\",\n    \"Heavy Crossbow\",\n    \"Longbow\",\n    \"Net\",\n  ];\n\n  if (type === \"simpleR\") {\n    return simpleRanged[Math.floor(Math.random() * simpleRanged.length)];\n  } else if (type === \"simpleM\") {\n    return simpleMelee[Math.floor(Math.random() * simpleMelee.length)];\n  } else if (type === \"martialR\") {\n    return martialRanged[Math.floor(Math.random() * martialRanged.length)];\n  } else if (type === \"martialM\") {\n    return martialMelee[Math.floor(Math.random() * martialMelee.length)];\n  }\n};\n\n//will randomize equipment based off class\n//preferential logic will usually outfit a character with better equipment based on current meta of the game\n\n//if class has multiple proficiencies, eg both simple and martial weapons,\n//a roll for one will be made before the roll for the individual equipment is finished\nconst getEquipment = (target) => {\n  let temp = [];\n  let weaponRNG = null;\n  let armorRNG = null;\n  let customInv = null;\n\n  switch (target) {\n    //artificer\n    case \"artificer\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG >= 4) {\n        temp.push(weaponSmith(\"simpleM\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //barbarian\n    case \"barbarian\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 5) {\n        temp.push(weaponSmith(\"martialM\"));\n      } else if (weaponRNG <= 5 && weaponRNG > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n      } else if (weaponRNG <= 2 && weaponRNG > 0) {\n        temp.push(weaponSmith(\"martialR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //bard\n    case \"bard\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 6) {\n        customInv = [\"hand crossbow\", \"longsword\", \"rapier\", \"shortsword\"];\n        temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n\n      temp.push(armorSmith(\"light\"));\n\n      break;\n    //cleric\n    case \"cleric\":\n      temp.push(weaponSmith(\"simpleM\"));\n\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //druid\n    case \"druid\":\n      customInv = [\n        \"Club\",\n        \"Dagger\",\n        \"Dart\",\n        \"Javelin\",\n        \"Mace\",\n        \"Quarterstaff\",\n        \"Scimitar\",\n        \"Sickle\",\n        \"Sling\",\n        \"Spear\",\n      ];\n      temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //fighter\n    case \"fighter\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 8) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 8 && weaponRNG > 6) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else if (weaponRNG <= 6 && weaponRNG > 4) {\n        temp.push(weaponSmith(\"martialM\"));\n      } else if (weaponRNG <= 4 && weaponRNG > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG > 7) {\n        temp.push(armorSmith(\"heavy\"));\n      } else if (armorRNG <= 7 && armorRNG > 2) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //monk\n    case \"monk\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 5) {\n        temp.push(\"shortsword\");\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n\n      temp.push(\"No Armor\");\n      break;\n    //paladin\n    case \"paladin\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 8) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 8 && weaponRNG > 6) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else if (weaponRNG <= 6 && weaponRNG > 4) {\n        temp.push(weaponSmith(\"martialM\"));\n      } else if (weaponRNG <= 4 && weaponRNG > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG > 7) {\n        temp.push(armorSmith(\"heavy\"));\n      } else if (armorRNG <= 7 && armorRNG > 2) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //ranger\n    case \"ranger\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 8) {\n        temp.push(weaponSmith(\"martialM\"));\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 8 && weaponRNG > 6) {\n        temp.push(weaponSmith(\"simpleM\"));\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 6 && weaponRNG > 4) {\n        temp.push(weaponSmith(\"martialR\"));\n      } else if (weaponRNG <= 4 && weaponRNG > 2) {\n        temp.push(weaponSmith(\"simpleM\"));\n        temp.push(weaponSmith(\"simpleR\"));\n      } else {\n        temp.push(weaponSmith(\"simpleR\"));\n      }\n\n      armorRNG = Math.floor(Math.random() * 11);\n      if (armorRNG >= 7) {\n        temp.push(armorSmith(\"med\"));\n      } else {\n        temp.push(armorSmith(\"light\"));\n      }\n      break;\n    //rogue\n    case \"rogue\":\n      weaponRNG = Math.floor(Math.random() * 11);\n      if (weaponRNG > 6) {\n        customInv = [\"Hand crossbow\", \"Longsword\", \"Rapier\", \"Shortsword\"];\n        temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n      } else {\n        temp.push(weaponSmith(\"simpleM\"));\n      }\n\n      temp.push(armorSmith(\"light\"));\n      break;\n    //sorcerer\n    case \"sorcerer\":\n      customInv = [\"Dagger\", \"Dart\", \"Sling\", \"Quarterstaff\", \"Light Crossbow\"];\n      temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n\n      temp.push(\"No Armor\");\n      break;\n    //warlock\n    case \"warlock\":\n      temp.push(weaponSmith(\"simpleM\"));\n\n      temp.push(armorSmith(\"light\"));\n      break;\n    //wizard\n    case \"wizard\":\n      customInv = [\"Dagger\", \"Dart\", \"Sling\", \"Quarterstaff\", \"Light Crossbow\"];\n      temp.push(customInv[Math.floor(Math.random() * customInv.length)]);\n\n      temp.push(\"No Armor\");\n      break;\n    default:\n      return;\n  }\n\n  return temp;\n};\n\nexport { getEquipment, getsShield, getsPotion, greaterItems, generateHealth };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}